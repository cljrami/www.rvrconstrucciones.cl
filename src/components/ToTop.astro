---

---

<div
  class="fixed bottom-5 right-5 flex items-center justify-center"
  id="backToTopContainer"
>
  <div class="relative flex items-center justify-center w-16 h-16">
    <div class="progress-circle hidden" id="backToTop" onclick="scrollToTop()">
      &#8679;
    </div>
    <svg class="progress-ring" width="70" height="70">
      <circle
        class="progress-ring__circle"
        stroke="white"
        stroke-width="4"
        fill="transparent"
        r="30"
        cx="35"
        cy="35"></circle>
    </svg>
  </div>
</div>

<style>
  .progress-circle {
    font-size: 2rem;
    cursor: pointer;
    transition:
      opacity 0.3s,
      transform 0.3s;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .progress-ring {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .progress-ring__circle {
    transition: stroke-dashoffset 0.3s;
    transform: rotate(-90deg);
    transform-origin: 50% 50%;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const backToTop = document.getElementById("backToTop");
    const progressCircle = document.querySelector(
      ".progress-ring__circle"
    ) as SVGCircleElement | null;

    if (progressCircle) {
      const radius = progressCircle.r.baseVal.value;
      const circumference = radius * 2 * Math.PI;

      progressCircle.style.strokeDasharray = `${circumference} ${circumference}`;
      progressCircle.style.strokeDashoffset = `${circumference}`;

      // Función para actualizar la barra de progreso
      function setProgress(percent: number) {
        if (progressCircle) {
          const offset = circumference - (percent / 100) * circumference;
          progressCircle.style.strokeDashoffset = `${offset}`;
        }
      }

      // Función para hacer scroll hacia arriba
      function scrollToTop() {
        window.scrollTo({ top: 0, behavior: "smooth" });
      }

      // Mostrar u ocultar el botón de "Back to Top" según el scroll
      window.addEventListener("scroll", () => {
        const scrollTop =
          window.pageYOffset || document.documentElement.scrollTop;
        const scrollHeight =
          document.documentElement.scrollHeight - window.innerHeight;
        const scrollProgress = (scrollTop / scrollHeight) * 100;

        setProgress(scrollProgress);

        if (backToTop) {
          if (scrollTop > 300) {
            backToTop.classList.remove("hidden");
          } else {
            backToTop.classList.add("hidden");
          }
        }
      });

      // Asignar la función de scrollToTop al botón
      if (backToTop) {
        backToTop.onclick = scrollToTop;
      }
    }
  });
</script>
