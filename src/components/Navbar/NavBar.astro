---
export interface NavLink {
  href: string;
  label: string;
}

export interface Props {
  textoLogo: string;

  links: NavLink[];
}

const { textoLogo, links } = Astro.props;
---

<style>
  .transition-nav {
    transition: transform 0.3s ease-in-out;
  }

  .hidden-nav {
    transform: translateY(-100%);
  }
  .active-link:before {
    vertical-align: middle;
    margin-right: 2px;
    font-family: "Font Awesome 6 Free";
    font-weight: 900;
    content: "\f105";
  }
  .active-link {
    @apply text-yellow-400;
  }
</style>

<div
  id="navbar"
  class="z-100 w-full fixed transition-nav h-[80px] flex flex-col top-0"
>
  <nav class="flex p-4 w-100 justify-between">
    <a
      href="/"
      class="text-xl font-light text-white flex justify-center items-center"
    >
      {textoLogo}
    </a>
    <button id="menu-btn" class="md:hidden">
      <svg
        class="h-6 w-6 text-white"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 6h16M4 12h16m-7 6h7"></path>
      </svg>
    </button>
    <ul id="menu" class="hidden md:flex">
      {
        links.map((link) => (
          <li class="p-2">
            <a href={link.href} class="flex  text-white hover:text-yellow-400">
              {link.label}
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
</div>

<div
  id="sidebar"
  class="fixed inset-0 bg-slate-900 bg-opacity-10 backdrop-blur-lg hidden z-50"
>
  <div class="relative min-h-full w-80 bg-black text-white pl-5">
    <button id="close-btn" class="absolute top-0 right-0 p-4">
      <svg
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
    <h2 class="pt-20 pl-2 font-bold">HastalaTumba</h2>
    <ul class="flex flex-col items-start pt-4">
      {
        links.map((link) => (
          <li class="p-2 text-lg">
            <a href={link.href} class="flex items-center">
              {link.label}
            </a>
          </li>
        ))
      }
    </ul>
    <a
    href="#"
    class="flex items-center justify-center mb-1 font-semibold text-gray-900"
  >
    <img
      src="/Imagenes/Logos/Logo-hasta-la-tumba-comparte-tus-confesiones.webp"
      class="h-24 lg:h-48 md:h-36"
      alt="Logo De HastalaTumba"
      title="Holaa"
    />
  </a>
    <h4 class="text-gray-500 text-md mt-2  text-center">
      La libertad de ser an√≥nimo te espera.
    </h4>
    <div class="flex justify-center gap-6 my-3">
      <a href=""
        ><i
          class="fab fa-tiktok text-white border-white hover:border-yellow-300 hover:text-yellow-300 font-bold p-2 text-2xl"
        ></i></a
      >
      <a href="">
        <i
          class="fab fa-youtube text-white border-white hover:border-yellow-300 hover:text-yellow-300 font-bold p-2 text-2xl"
        ></i>
      </a>
      <a href="">
        <i
          class="fab fa-facebook text-white border-white hover:border-yellow-300 hover:text-yellow-300 font-bold p-2 text-2xl"
        ></i>
      </a>
      <a href="">
        <i
          class="fab fa-instagram text-white border-white hover:border-yellow-300 hover:text-yellow-300 font-bold p-2 text-2xl"
        ></i>
      </a>
    </div>
    <button
      id="btn"
      type="button"
      data-bs-toggle="offcanvas"
      data-bs-target="#offcanvasRight"
      aria-controls="offcanvasRight"
      class="d-none d-xl-block"
      ><span></span><span></span><span></span>
    </button>
  </div>
</div>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const navbar = document.getElementById("navbar");
    const menuBtn = document.getElementById("menu-btn");
    const sidebar = document.getElementById("sidebar");
    const closeBtn = document.getElementById("close-btn");
    const navLinks = navbar ? navbar.querySelectorAll("nav ul li a") : [];
    const sidebarLinks = sidebar ? sidebar.querySelectorAll("a") : [];
    let lastScrollY = window.scrollY;

    // Function to highlight the active link
    function setActiveLink(clickedLink: HTMLAnchorElement) {
      navLinks.forEach((link) => link.classList.remove("active-link"));
      clickedLink.classList.add("active-link");
    }

    // Highlight the active link based on the current URL
    function highlightCurrentLink() {
      const currentUrl = window.location.pathname;
      navLinks.forEach((link) => {
        if (link.getAttribute("href") === currentUrl) {
          link.classList.add("active-link");
        } else {
          link.classList.remove("active-link");
        }
      });
    }

    // Add click event to nav links
    navLinks.forEach((link) => {
      link.addEventListener("click", function (this: HTMLAnchorElement) {
        setActiveLink(this);
      });
    });

    // Add click event to sidebar links
    sidebarLinks.forEach((link) => {
      link.addEventListener("click", function (this: HTMLAnchorElement) {
        setActiveLink(this);
        if (sidebar) {
          sidebar.classList.add("hidden");
        }
      });
    });

    // Handle menu button click for showing/hiding sidebar
    if (menuBtn && sidebar) {
      menuBtn.addEventListener("click", () => {
        sidebar.classList.toggle("hidden");
      });
    }

    // Handle close button click for hiding sidebar
    if (closeBtn && sidebar) {
      closeBtn.addEventListener("click", () => {
        sidebar.classList.add("hidden");
      });
    }

    // Handle scroll event for hiding/showing navbar and changing its styles
    if (navbar) {
      window.addEventListener("scroll", () => {
        if (window.scrollY > lastScrollY) {
          navbar.classList.add("hidden-nav");
        } else {
          navbar.classList.remove("hidden-nav");
        }
        lastScrollY = window.scrollY;

        if (window.scrollY > 100) {
          navbar.classList.add(
            "bg-transparent",
            "backdrop-blur-lg",
            "text-white"
          );
          navbar.classList.remove("text-black");
        } else {
          navbar.classList.remove(
            "bg-transparent",
            "backdrop-blur-lg",
            "text-white"
          );
          navbar.classList.add("text-black");
        }
      });
    }

    // Initial call to highlight the current link based on URL
    highlightCurrentLink();
  });
</script>
